services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    networks:
      - backend-net    
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${SPRING_DATASOURCE_USERNAME} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 5s
      retries: 10

  backend:
    build: .
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    ports:
      - '8080:8080'
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend-net

networks:
  backend-net: